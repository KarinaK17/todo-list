(()=>{"use strict";let e=[];class t{constructor(e){this.name=e,this.tasks=[]}createTask(e,t,o,c,d){let a=new n(e,t,o,c,d);return this.tasks.push(a),a}deleteTask(e){this.tasks.splice(e,1)}}class n{constructor(e,t,n,o,c){this.title=e,this.description=t,this.date=n,this.priority=o,this.complete=c}set newTitle(e){this.title=e}set newDescription(e){this.description=e}set newDate(e){this.date=e}set newPriority(e){this.priority=e}set newComplete(e){this.complete=e}}document.querySelector(".content");const o=document.querySelector(".projects-container"),c=document.querySelector(".add-project"),d=document.querySelector(".cancel-project"),a=document.querySelector(".add-task"),s=document.querySelector(".cancel-task");function l(){document.querySelector(".project-form-window").style.display="flex"}function r(){document.querySelector(".project-form-window").style.display="none"}function u(){document.querySelector(".task-form-window").style.display="none"}document.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".open-project-form").addEventListener("click",l)})),d.addEventListener("click",r),c.addEventListener("click",(n=>{n.preventDefault(),function(n){let o=new t(n);e.push(o)}(document.getElementById("project-name").value),function(){const t=document.createElement("div");t.classList.add("project");const n=document.createElement("p");n.textContent=document.getElementById("project-name").value;const c=document.createElement("div");c.textContent="I am a task Container",e.forEach((t=>{c.dataset.number=e.indexOf(t)}));const d=document.createElement("button");d.textContent="Add a new task!",d.classList.add("open-task-form-btn"),c.appendChild(d),e.forEach((t=>{d.dataset.numberP=e.indexOf(t)})),d.addEventListener("click",(()=>{document.querySelector(".task-form-window").style.display="flex",a.dataset.numberProject=d.dataset.numberP}));const s=document.createElement("button");s.textContent="Delete Project",s.setAttribute("type","button"),e.forEach((t=>{s.dataset.numberBtn=e.indexOf(t)})),s.addEventListener("click",(()=>{var n;n=s.dataset.numberBtn,e.splice(n,1),o.removeChild(t),console.log(e)})),t.append(n,c,s),o.appendChild(t),console.log("dom"),document.getElementById("project-name").value=""}(),r(),console.log("inside add button",e)})),s.addEventListener("click",u),a.addEventListener("click",(t=>{var n;t.preventDefault(),n=a.dataset.numberProject,e[n].createTask(document.getElementById("task-title").value,document.getElementById("task-description").value,document.getElementById("task-date").value,document.getElementById("task-priority").value,document.getElementById("task-complete").checked),function(e){const t=document.createElement("div");document.querySelector(`[data-number="${e}"]`).appendChild(t);const n=document.createElement("p");n.textContent=`${document.getElementById("task-title").value} due ${document.getElementById("task-date").value}`;const o=document.createElement("p");o.textContent=`Title: ${document.getElementById("task-title").value}`;const c=document.createElement("p");c.textContent=`Description: ${document.getElementById("task-description").value}`;const d=document.createElement("p");d.textContent=`Due Date: ${document.getElementById("task-date").value}`;const a=document.createElement("p");let s;a.textContent=`Priority: ${document.getElementById("task-priority").value}`,s=!1===document.getElementById("task-complete").value?"no":"yes";const l=document.createElement("p");l.textContent=`Task complete: ${s}`,t.append(n,o,c,d,a,l)}(a.dataset.numberProject),u(),console.log("inside add tasks button",e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,