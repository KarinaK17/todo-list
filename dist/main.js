(()=>{"use strict";var t={d:(e,a)=>{for(var s in a)t.o(a,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:a[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{$:()=>g});let e=[];class a{constructor(t){this.name=t,this.tasks=[]}createTask(t,e,a,d,n){let c=new s(t,e,a,d,n);return this.tasks.push(c),c}deleteTask(t){this.tasks.splice(t,1)}}class s{constructor(t,e,a,s){this.title=t,this.description=e,this.date=a,this.priority=s,this.complete=!1}editTask(t,e,a,s){this.title=t,this.description=e,this.date=a,this.priority=s}}function d(t){let s=new a(t);e.push(s)}document.querySelector(".content");const n=document.querySelector(".projects-container"),c=document.querySelector(".add-project"),o=document.querySelector(".cancel-project"),l=document.querySelector(".add-task"),r=document.querySelector(".cancel-task"),i=document.querySelector(".edit-task"),p=document.querySelector(".close-task");function u(){n.innerHTML="";for(let t=0;t<e.length;t++){const a=document.createElement("div");n.appendChild(a),a.dataset.p=t,a.classList.add("project");const s=document.createElement("img");s.classList.add("pin"),s.setAttribute("src","./pin.svg"),s.setAttribute("alt","pin");const d=document.createElement("h2");d.dataset.pn=a.dataset.p,d.textContent=`${e[d.dataset.pn].name}`;const c=document.createElement("div");c.classList.add("task-container"),c.dataset.tc=a.dataset.p;const o=document.createElement("button");o.textContent="Add a new task!",o.classList.add("open-task-form-btn"),o.dataset.otf=c.dataset.tc,c.appendChild(o),o.addEventListener("click",(()=>{l.dataset.at=c.dataset.tc,document.querySelector(".task-form-window").style.display="flex"}));for(let a=0;a<e[t].tasks.length;a++){const t=document.createElement("div");t.classList.add("task"),t.dataset.tn=a,t.dataset.pc=o.dataset.otf,c.appendChild(t);const s=document.createElement("input");s.setAttribute("type","checkbox"),s.dataset.cp=t.dataset.pc,s.dataset.c=t.dataset.tn,s.checked=e[s.dataset.cp].tasks[s.dataset.c].complete,s.addEventListener("change",(()=>{!1===e[s.dataset.cp].tasks[s.dataset.c].complete?(e[s.dataset.cp].tasks[s.dataset.c].complete=!0,null!==document.querySelector(`[data-complete="${t.dataset.tn}"][data-completep="${t.dataset.pc}"]`)&&(document.querySelector(`[data-complete="${t.dataset.tn}"][data-completep="${t.dataset.pc}"]`).textContent="Task complete: yes")):(e[s.dataset.cp].tasks[s.dataset.c].complete=!1,null!==document.querySelector(`[data-complete="${t.dataset.tn}"][data-completep="${t.dataset.pc}"]`)&&(document.querySelector(`[data-complete="${t.dataset.tn}"][data-completep="${t.dataset.pc}"]`).textContent="Task complete: no")),g()}));const d=document.createElement("p");d.classList.add("short-task"),d.dataset.tt=t.dataset.tn,d.dataset.ttp=t.dataset.pc,d.textContent=`${e[d.dataset.ttp].tasks[d.dataset.tt].title} due ${e[d.dataset.ttp].tasks[d.dataset.tt].date}`;const n=document.createElement("button");n.setAttribute("type","button"),n.textContent="View details",n.dataset.v=t.dataset.tn,n.dataset.vp=t.dataset.pc,n.addEventListener("click",(()=>{if("View details"==n.textContent){n.textContent="Hide details";const a=document.createElement("div");a.classList.add("details"),a.dataset.vd=n.dataset.v,a.dataset.vdp=n.dataset.vp,t.insertBefore(a,p);const s=document.createElement("p");s.textContent=`Title: ${e[n.dataset.vp].tasks[n.dataset.v].title}`;const d=document.createElement("p");d.textContent=`Description: ${e[n.dataset.vp].tasks[n.dataset.v].description}`;const c=document.createElement("p");let o;c.textContent=`Due date: ${e[n.dataset.vp].tasks[n.dataset.v].date}`;const l=document.createElement("p");let r;!1===e[n.dataset.vp].tasks[n.dataset.v].priority?o="no":(o="yes",l.classList.add("priority")),l.textContent=`High priority: ${o}`,r=!1===e[n.dataset.vp].tasks[n.dataset.v].complete?"no":"yes";const i=document.createElement("p");i.setAttribute("id","completeness"),i.dataset.completep=t.dataset.pc,i.dataset.complete=t.dataset.tn,i.textContent=`Task complete: ${r}`,a.append(s,d,c,l,i)}else n.textContent="View details",document.querySelector(`[data-tn="${n.dataset.v}"][data-pc="${n.dataset.vp}"]`).removeChild(document.querySelector(`[data-vd="${n.dataset.v}"][data-vdp="${n.dataset.vp}"]`))})),!0===e[n.dataset.vp].tasks[n.dataset.v].priority&&t.setAttribute("id","important");const l=document.createElement("button");l.setAttribute("type","button"),l.textContent="Edit",l.dataset.e=t.dataset.tn,l.dataset.ep=t.dataset.pc,l.addEventListener("click",(()=>{i.dataset.et=l.dataset.e,i.dataset.etp=l.dataset.ep,document.querySelector(".view-task-window").style.display="flex",document.getElementById("task-title-v").value=e[i.dataset.etp].tasks[i.dataset.et].title,document.getElementById("task-description-v").value=e[i.dataset.etp].tasks[i.dataset.et].description,document.getElementById("task-date-v").value=e[i.dataset.etp].tasks[i.dataset.et].date,document.getElementById("task-priority-v").checked=e[i.dataset.etp].tasks[i.dataset.et].priority})),i.addEventListener("click",(t=>{t.preventDefault(),e[i.dataset.etp].tasks[i.dataset.et].editTask(document.getElementById("task-title-v").value,document.getElementById("task-description-v").value,document.getElementById("task-date-v").value,document.getElementById("task-priority-v").checked),console.log(e),g(),v(),m()}));const r=document.createElement("button");r.setAttribute("type","button"),r.textContent="Delete",r.dataset.d=t.dataset.tn,r.dataset.dp=t.dataset.pc,r.addEventListener("click",(()=>{e[r.dataset.dp].deleteTask(r.dataset.d),console.log(e),g(),m()}));const p=document.createElement("div");p.classList.add("button-container"),p.append(n,l,r),t.append(s,d,p)}const r=document.createElement("button");r.textContent="Delete Project",r.setAttribute("type","button"),r.classList.add("delete-project-btn"),r.dataset.pd=a.dataset.p,r.addEventListener("click",(()=>{var t;t=r.dataset.pd,e.splice(t,1),g(),m(),console.log(e)})),a.append(s,d,c,r)}}function m(){u()}function k(){document.querySelector(".project-form-window").style.display="flex"}function y(){document.querySelector(".project-form-window").style.display="none"}function v(){document.querySelector(".view-task-window").style.display="none"}function E(){document.querySelector(".task-form-window").style.display="none"}document.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".open-project-form").addEventListener("click",k)})),o.addEventListener("click",y),c.addEventListener("click",(t=>{t.preventDefault(),d(document.getElementById("project-name").value),y(),g(),console.log(e),u()})),r.addEventListener("click",E),l.addEventListener("click",(t=>{var a;t.preventDefault(),a=l.dataset.at,e[a].createTask(document.getElementById("task-title").value,document.getElementById("task-description").value,document.getElementById("task-date").value,document.getElementById("task-priority").checked),E(),g(),u(),console.log(e)})),p.addEventListener("click",v);let f=JSON.parse(localStorage.getItem("projectsJSON"));function g(){localStorage.setItem("projectsJSON",JSON.stringify(e))}null===f?(d("Personal tasks"),d("Work tasks"),console.log(e),e[0].createTask("Buy a new dress","buy a new dress for Mary's wedding on 20.04.2023","2023-04-10",!0),e[0].createTask("Make a dentist's appointment","Make a dentist's appointment to check out a cavity","2023-02-25",!0),e[1].createTask("Buy a new mug","Buy a new coffee mug to leave at work","2023-03-01",!1),localStorage.setItem("projectsJSON",JSON.stringify(e))):(f.forEach((t=>{!function(t){Object.setPrototypeOf(t,a.prototype)}(t),t.tasks.forEach((t=>function(t){Object.setPrototypeOf(t,s.prototype)}(t)))})),e=f),u(),console.log(e)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,